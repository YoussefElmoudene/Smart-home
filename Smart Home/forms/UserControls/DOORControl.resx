<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAg1SURBVHhe7ZtbbBzVGcfdQgtVQeKBm/rU9oEnYhtvICQx
        mCi2koi7YFEdvLO7vszOjIXTi6qGVlUKBeEAFQoqCuYiIGkIiiEmEBEiLibECQlE4inlJnipIF57d20n
        1Hub4ev3nXwHmeHEjHfn7AaVn3Rk//fMWHP+e+Y7Z+afNPzAPLxpTBzYZ0zAmJGGg7E0HI6Nw3vY3sX2
        Dmr6/G1so3jM69j2xifhFWy7se2KZ2BnIgPDiSw8h+1ZbFsTOXg6mYMnsT2WnIJHsT3SPQ0PY3sI24Pd
        M3B/zwzc13Mc7umZ2c+XUT9oUGgC1MsEvoz6QYMRJnRN9OyLTTyDg/1MYcLsWCw9us9I3/VW13jHaDR9
        Dp9eMdIElvVjDxpAJrAUjMbTFx+MTUQPxcY3vds1fuRw1zHvmzMh7b5mpI/ieUN7EhPRlzo/P59PDYyc
        CSzrB01jMoGlkrHuyXNxJrQfjI0PjsXGx3AmFL91OxiTn75oZLaMxCfN7fGpX/Kpp0TeDizrB93DZALL
        QOztOvbz/bF065tG+k9owmuvxidn/TVhRyL7BdaEHdsSmXXb4tMRaIAf8ekCWRNY1o8RvGC6aJYVsSMK
        P90bTy9HE9a/bEzu3mVMTvsL45ZE9nU+XCALI8tvsagfFi1y4M9NjvdSk+0dEs3xdjXacCf18WHV8zxe
        KJnAMhTQkDNG4unmF+KZgeF4dliawN0CuTqw/JpLbWjEwb7a5HwF8zbb2xOKEThVgUxgqQU5E1gK5BLJ
        UtDkQAK/5TwNsNH2ZvD3zY39cEujA0tEw9/FZ6JPHDPbZEOST6+M7XhhZAJLLcjbgaVA7hNYCnBwWTEw
        x3uk+Q64IGK5ayOOt63FcQ9HbPdQi+1tX9zv/ibyezifjDg5G7wcn14Z/8JNC5nAUguyMLIUyM0SS0Gz
        DW1N/XBNiw2RFtv9CAcPqoaGfLjYgsua+6EDZ8AKPr0ytuBFkAkstSBXB5YCuWNk+Q3w2/7k5GDdf7dY
        bn8kBVe0WHCl+N12PxB9tjvTFoez+ZTKeQoNIBNYakEukSwFqsIowW/4dpwBdy4ZgIvaU+W/YzvQYZUP
        4s+7l1pwYYvj3ROxvccbNsCP+ZTKeRILEZnAUgtys8RSoCqMc2lbB+fhoD/GBnMbmvDh6jvgLD6seqgS
        P6FYjsJE7hhZClSFcS4rewuXdKRKZRzw+yvN8mpqaMB77VbpP1f+Dn7Gh1XPZhy8fzkKG7ltZilQFUY/
        7f3wiyhuslgKNoQx7edCuzEygaUW5KM0S4GqMPoZMuEnmxO5B//ZPZXehO2h5PQD9Bl3hwPtx+fbkoaB
        fIpkKVAVRj+4T3hA8T5hI3eHAz2R6X4okY/SLAWqwujnqWQ2TZuloUR22VAy1ypMSE6Nc3c4/AOfyXU/
        lso3SywFqsLoZ2sim+YdY+tjidxVJ2fC1DHuDgd6K0MmsNSCfLPEUqAqjH7wUXqj//Xa5mRukLvDYRAN
        0P1qSr5eYylQFUY/VPCeTWTulyY8kchtxFXgTO4Oh3t7jgOZwFIL8h0jS4GqMJ6K+bbNVXM3GkAmsNQC
        DZZMYClQFcZTMd+2uWr+1nMCyASWWpCv3FkKVIXxVHzXtrkq/tp7AsgEllqQuQNLgaowSvYakwfkPkHu
        GOfbNlfFX9AAMoGlFqjakwksBarCKJFL5FwTXohn3ubucFnf+yWQCSy1QIPxL3mqwigJskSGxh/RADKB
        pRZU4YuqMErkEqmaCfJ2kIVxazxXXb74h74vgUxgqQW6eH/4oiqMkjFjfP9CTODTKuO3ff8FMoGlFuii
        6eJZClSFcaGEsjoMoAFkAsuKoXBkp5HZOBLPfIE/P98ZzwzSZ9SnCl/om/UXxoUSyurQj4MnE1hWDA2Y
        Bjq30WfUpwpfZGEMI5rnP1kZVt8skAksK4a+dTFwfHTdGcu1CgPwM+pThS+yMFZtglHl8mias0AmsKwY
        aYAYfGLiqrkGqMIXVWGsCz1mHsgElhWjugVGjMx91KcKX1SFsS4k0QAygWXFiCKIJogCSG1OEVSFL2SQ
        vzDWBQMHTyaw1IIqfNGRSlfE7WYByASWWqDcwR++1CKVDkRnqgBkAkstqMKXWqTSgbgNDSATWGpBFb7U
        IpUOxK2pIpAJLLWgCl9qkUoH4mY0gExgqQVV+FKLVDoQN1hFIBNYakEVvqgKY124zioBmcBSC6rwRVUY
        68IaNIBMYKkFVfhSi1Q6EKtw8GQCSy2owhdVYawL7VYZyASWWlCFL7VIpQOxwi4DmcBSC6rwpRapdCDa
        bBfIBJZaUIUvtUilA9GKBpAJLLWgCl9qkUoHYhkOnkxgqQVV+FKLVDoQSxwPyASWWlCFL7VIpQOxGA0g
        E1hqQRW+1CKVDkQLDl6YYHvDSy13YJlTbI5G4QzuDgUZvsiZIGuC7lQ6EE2O98bXJmCj22G5XZ6+2nJ3
        r7BK6ztSpeX+f6u3UGT44jdhQ/cJPYHnQllkw6+bbdeION7QEsc9KgujXCLbrVJpVap0ZE2qOHidWbj+
        xnVwHp8aiLDCl5pxuQMXL7XdKM6ETVfb7pFrrJInd4y0bb7WKrrXW8WjN6cKQ7eaxWineXze/zUWVvhS
        N5Z1w7ltdrl9Zao8uMoqjq22ikX5FCnfJ9xmFj7tNAtb1pp5s6s3/ys+VRBW+HLa0ObAOWtS5Q6cCXfh
        TBi9ySzMChP49drJF62znyX68s8kU/mesMKX05a2DXDmTXYpEk0V1kVT+R2dqXxWvm2WuUMY4cv3BlpG
        1/YWm9eahYFYX3442Zc/1m3mT4+K//9HQ8P/AE3Xbq2Yz6YrAAAAAElFTkSuQmCC
</value>
  </data>
</root>
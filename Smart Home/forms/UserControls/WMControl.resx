<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
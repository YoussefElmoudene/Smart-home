<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7mZ2SuRB0+IAAAAASUVORK5CYII=
</value>
  </data>
</root>
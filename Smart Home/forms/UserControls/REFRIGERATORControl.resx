<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAd/SURBVHhe7Z1bjFX1FYf/plef2j60FksZ5sYMYyhFFKVI
        EdRSisIgTqGAIEWuM0CpWEopw1+NsY2C0daiTRqr2EvA4SoMVweBYdAHoU0fKtImTYSXXoa26QvBfF1r
        Z53jRuYITCvsNdlf8uWss9bee37rHM7JmeQAIScnJycnJycnJycnJ6eH0quJ4dcuZN21Tfyl10LOSE2W
        TDJJNvHFXou4xWL7p/cSrtalulo6y8oT8kLZDD5pazhlFR/9QhM7ezeBRyV7a2jgI7aNP/o0skyk6AJ+
        2beJgYPn8DE7JDNoJs32xUZePCdzI0vtEF/oy7d8Pp3lC0Dtu4CVNso8kjsWcot/r1rIJ2zkh4p5jKmc
        D+ZxTy/lEfLWWTGfE8X88xhtIz9UzWVx9TxQq+bxtLXdIPl/WsgvLrK2H2rnsKp2Lqg1c4nWdoNmLuTX
        Xazth/6ziXVzQNXa2m7wnj8MkNAi5nsLwFWLOnhyYQediw5z7DuHud4mmaJkfi8MnEUceD8kSm3tsOwg
        E75/CFIes1GmKJXfDYMktIhZXOCRAzSLFH2Nd22UKUrld8PgmcQbvg2q1tYOq9uIa9ogrY0yRan8brhR
        Qg+ZCarW1g7P7SOKpLVRpiiV3w1DZxCH3geJUls7rNtFXLcb0tooU5TK74ZhElrELC7Q0krcuBPS2ihT
        lMrvhuH3EodPh0SprR12bSeKpLVRpiiV3w0jJPSt94KqtbXDwW3EQ9sgrY0yRan8bhg5lThqGqhaWzu8
        uZnmo5uhoNzP5MfQUvndcJuEvn0qqFpbO7zVwoS3NkLBP27M5i9ipfK7YfS3iKOnQKLU1g7AVe+sZ43Y
        KR57ZwODbJQpSuV3wxgJLWK6W8B7/jB2EvHOyaBqbW03eM8f7pLQ4yaBqrW13eA9fxjfQKz/JqhaW9sN
        3vOHuxtontgA6t338LC13aCZi/llF2v7oWEisxvugcSJHJ08mWtslHkaGvi8Zi7mb2CWjfwwbQKfmzSR
        ThHndsoT8FlbyxdT6nl6ygRwrexg6/hCXwHTxnN6Wj14dmo9nbqLreWHGeOYPWM8mG96WmLWXVwzfRxH
        C/mnj+d+G/lh5jiaRdT7xvn7FKSZC/l1F2v7Qf4URRHT3edo7/nD7LHEOXeCqrW1rwiFHN31SufvFnMl
        9LyxoGpt7YQF7ZQ1drC4qZ16/aKWtT80Cjm66/vzu6BxDLHxG5AotbXDA/LgLz3E6QfbQV3azhobfWgU
        c3TXVH43LJTQImZxgXiAJQ8dgIJy/7SNMkWp/G5YPJq4+OuQKLW1w+NtxCf2Q1obZYpS+d2wREJ/dzSo
        Wls7rN1HfHYfpLVRpiiV3w0P3EFc+jV5jxe1tnbyxayXdkNaG1020tkuxnR+Nzwoob93B6haWztsaiVu
        2glpbXTZSGe7GNP53bD8NuLy2yFRamuHPduJImltdNk4J9vFmMrvhhUSWsQsLtCxhdixFdLaKFOUyu+G
        lSOJzaNA1dra4XebiL/fDGltlClK5XfDKgkdR8rnfFFra4c/tbDkzy2QMpO/B5TK74aHRhAfvhVUra0d
        Tr1M2an1dJ7aAOrJDay20RWlkLUr0/nd8KiEFjHPWeDkevrIA7/o5MvU6zflrH1FSWXtSn9PwGPDiY99
        FRKltnZmKWbtSgf5z+PHElrEdLeA9/zh8WHEJ24BVWtru8F7/rBaQq8ZBqrW1naD9/zhqaHEp74CiVJb
        2w3e84efSGgR090C3vOHZ24iPnMzJEptbTd4zx/WSuhnbwJVa2u7wXv+8NyNxJ8PAVVra7vBe/7wCwkt
        YrpbwHv+8Pxg4vM3QKLU1naD9/zhBQktYrpbwHv+sG4Q8aXrQdXa2m7wnj/8SkL/ehCoWlvbDd7zh98M
        JP72y6BqbW03eM8fNkhoEdPdAt7zh5YBxJYvQaLU1naD9/xhk4TePABUra3tBu/5w5briFuvA1Vra7vB
        e/7wSn9WvFIH5qPWdoNmLuTfVsdya/thR39mtfaHxFo2WdsNO2rZUsi/s4Yp1vZDaw01u2pBlQXO7OxH
        rY0yz4466jSz5X9XdulrI1/srWGvSGI/jl/Kk7Cngk/t6cdaOe9vxWtcontq+Kvc/kyvZZe9IHurqJPz
        TqSu02ojf+gyr/bjtIi6r5ozr1azRepHxGUfaDVvyG1y3v/B18Wuf857aqatSUY7T+p/76ui0tbxyf5q
        hrdV8x+5xZOS+Z+v9WOUreGbA/JKOFDJ7oNV4EXJ6+4vl1+Q9krOiiRWsOZQJT/6AJ8sHivndTG/sBXs
        L1xD7r9x3jyl5Fkp7ir+zAp+aLF7Dh3lnOioAPVwOT/4Qx0ft9E5aF+OXZE69riNLgm5xrTCNaR++3Al
        VTY6Dzmm+n35ptqo5yALPnREluuG3fq3Gg724TPyYHZ2cb0L+Y+jZXzaLtNzONybq4+U097FwqUt51Bb
        Wff/S0F50ieKZ867bgn12NcrmGCn9zySJ6GCVfLAvi23Z9PLpzxr8+a2/+HBL3CkjJvlejvEf6V+xrnq
        rJzt8tYzxE7LycnJycnJycnJycnJ6XmE8F+Kl7XL6etmqgAAAABJRU5ErkJggg==
</value>
  </data>
</root>
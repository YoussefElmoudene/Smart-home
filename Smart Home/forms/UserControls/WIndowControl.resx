<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>